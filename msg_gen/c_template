echo "
#include \"${MESSAGE_NAME}.h\"

#include \"utils.h\"
#include \"genmsg.h\"

int serialize_${MESSAGE_NAME}(char* const buf, const void* msg_ptr)
{
	${MESSAGE_NAME}* msg = (${MESSAGE_NAME}*)msg_ptr;

	char* iter = buf;
	tcpmsg_init(&iter);
	$(TCPMSG_ADD)
	tcpmsg_finalize(buf, iter - buf);

	return iter-buf;
}

void* deserialize_${MESSAGE_NAME}(char* const buf)
{
	char* iter = buf;

	//Read the package len
	//int package_len = utils_get_int_from_bytes(iter, sizeof(int32_t));
	iter += sizeof(int32_t);

	// Read the length of the field
	int field_len = utils_get_int_from_bytes(iter, sizeof(int32_t));
	iter +=  sizeof(int32_t);

	${MESSAGE_NAME}* msg =
		(${MESSAGE_NAME}*)malloc(sizeof(${MESSAGE_NAME}));

	msg->data = (char*)calloc(sizeof(char), field_len + 1);

	memcpy(msg->data, iter, field_len);
	msg->data[field_len] = '\0';

	return msg;
}

void free_${MESSAGE_NAME}(void* msg)
{
	if(((${MESSAGE_NAME}*)msg)->data != NULL)
		free(((${MESSAGE_NAME}*)msg)->data);

	if(msg != NULL) free(msg);
}
"
